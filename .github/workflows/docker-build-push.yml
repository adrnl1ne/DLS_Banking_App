name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64/v8

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x' # Updated to support .NET 9.0

      - name: Run tests for UserAccountService
        run: dotnet test Microservices/UserAccountService.Tests/UserAccountService.Tests.csproj --logger "trx;LogFileName=useraccountservice_test_results.trx"
        continue-on-error: false

      - name: Run tests for TransactionService
        run: dotnet test Microservices/TransactionService.Tests/TransactionService.Tests.csproj --logger "trx;LogFileName=transactionservice_test_results.trx"
        continue-on-error: false
        
      - name: Upload UserAccountService Test Results
        uses: actions/upload-artifact@v4
        if: always() # Always run this step to upload results even if tests fail
        with:
          name: useraccountservice-test-results
          path: Microservices/UserAccountService.Tests/TestResults/useraccountservice_test_results.trx

      - name: Upload TransactionService Test Results
        uses: actions/upload-artifact@v4
        if: always() # Always run this step to upload results even if tests fail
        with:
          name: transactionservice-test-results
          path: Microservices/TransactionService/TransactionService.Tests/TestResults/transactionservice_test_results.trx

      - name: Build and push multi-architecture images
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          services=(
            "fraud-detection-service:Microservices/FraudDetectionService"
            "user-account-service:Microservices/UserAccountService"
            "transaction-service:Microservices/TransactionService"
            "frontend:frontend"
            "query-service:Microservices/QueryService"
          )
          for service in "${services[@]}"; do
            name="${service%%:*}"
            context="${service##*:}"
            echo "Building and pushing $name..."
            docker buildx build \
              --platform linux/amd64,linux/arm64/v8 \
              -t "$DOCKERHUB_USERNAME/dls_banking_app-$name:latest" \
              --file "$context/Dockerfile" \
              --push \
              "./$context" || { echo "Build failed for $name"; exit 1; }
            echo "Successfully built and pushed $name"
          done

      - name: Verify pushed images
        run: |
          services=(
            "fraud-detection-service"
            "user-account-service"
            "transaction-service"
            "frontend"
            "query-service"
          )
          for service in "${services[@]}"; do
            echo "Verifying $service..."
            docker pull "${{ secrets.DOCKERHUB_USERNAME }}/dls_banking_app-$service:latest"
            docker inspect "${{ secrets.DOCKERHUB_USERNAME }}/dls_banking_app-$service:latest" | grep Architecture
          done

      - name: Notify on failure
        if: failure()
        run: |
          echo "Build, push, or verification failed. Check logs for details."