apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app: user-account-service
    kompose.cmd: kompose convert -f ../docker-compose.prod.yml
    kompose.image-pull-policy: Always
    kompose.service.type: nodeport
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: user-account-service
    app: user-account-service
  name: user-account-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-account-service
  template:
    metadata:
      labels:
        app: user-account-service
    spec:
      containers:
        - name: user-account-service
          image: fhallengreen/dls_banking_app-user-account-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9091
              name: prometheus
              protocol: TCP
          env:
            - name: MYSQL_HOST
              value: "mysql-useraccount"
            - name: MYSQL_PORT
              value: "3307"
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: banking-app-config
                  key: MYSQL_DATABASE_UA
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: banking-app-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: banking-app-secret
                  key: MYSQL_PASSWORD_UA
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: banking-app-secret
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: banking-app-secret
                  key: RABBITMQ_DEFAULT_PASS
            - name: JWT_ISSUER
              valueFrom:
                configMapKeyRef:
                  name: banking-app-config
                  key: JWT_ISSUER
            - name: JWT_AUDIENCE
              valueFrom:
                configMapKeyRef:
                  name: banking-app-config
                  key: JWT_AUDIENCE
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: banking-app-secret
                  key: JWT_KEY
            - name: PROMETHEUS_PORT
              value: "9091"
          resources:
            limits:
              memory: "1Gi"
              cpu: "1"
            requests:
              memory: "512Mi"
              cpu: "0.5"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: data-protection-keys
              mountPath: /root/.aspnet/DataProtection-Keys
            - name: service-account-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
      volumes:
        - name: data-protection-keys
          persistentVolumeClaim:
            claimName: data-protection-keys-pvc
        - name: service-account-token
          projected:
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
              - downwardAPI:
                  items:
                    - path: "namespace"
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
      restartPolicy: Always
